CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    email varchar,
    login varchar,
    name varchar,
    birthday date,
    CONSTRAINT user_id_pk PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS rating (
	rating_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name varchar UNIQUE,
	CONSTRAINT rating_id_pk PRIMARY KEY (rating_id)
);

CREATE TABLE IF NOT EXISTS user_friends (
	user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
	friend_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT user_friends_pk PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS films (
	film_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name varchar,
	description varchar,
	release_date date,
	duration int,
	rating_id INTEGER NOT NULL REFERENCES rating(rating_id) ON DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT film_id_pk PRIMARY KEY (film_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
	film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE ON UPDATE CASCADE,
	user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT film_likes_pk PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS genres (
	genre_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name varchar UNIQUE,
	CONSTRAINT genre_pk PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
	film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE ON UPDATE CASCADE,
	genre_id INTEGER NOT NULL REFERENCES genres(genre_id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT film_genre_pk PRIMARY KEY (film_id ,genre_id)
);